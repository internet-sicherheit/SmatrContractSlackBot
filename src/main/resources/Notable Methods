//        app.command("/info", (req, ctx) -> {
//
//            try {
//                System.out.println(numberContract.giveStoredNumber().send().toString());
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//
//            return  ctx.ack();
//        });


            numberContract.newNumberEventFlowable(DefaultBlockParameterName.LATEST, DefaultBlockParameterName.LATEST).subscribe(event -> {

                //Event emit notice
                //return event.number?
                ctx.say("" + event.number);
            });

//        app.command("/hello2", (req, ctx) -> {
//            // ctx.client() holds a valid bot token
//            ChatPostMessageResponse response = ctx.client().chatPostMessage(r -> r
//                    .channel(ctx.getChannelId())
//                    .text(":wave: How are you?")
//            );
//            return ctx.ack();
//        });


//        app.command("/hello3", (req, ctx) -> {
//            ChatPostMessageResponse response = ctx.say(":wave: How are you?");
//            return ctx.ack();
//        });


   app.command("/hello1", (req, ctx) -> {
            // Post a message via response_url
            System.out.println("he");
            WebhookResponse result = ctx.respond(res -> res
                    .responseType("in_channel") // or "in_channel"
                    .text("Hi there!") // blocks, attachments are also available
            );
            return ctx.ack(); // ack() here doesn't post a message
        });